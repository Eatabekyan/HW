name: CMake

on:
  push:
    branches: [main,task6]
  
  pull_request:
    branches: [main,task6]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: some dir
      working-directory: ${{github.workspace}}/task6/
      run: mkdir build && mkdir 3rdparty
    
    - name: Install gtest manually
      working-directory: ${{github.workspace}}/task6/3rdparty
      run: sudo apt install git && git clone https://github.com/google/googletest.git -b release-1.11.0

    - name: Build
      working-directory: ${{github.workspace}}/task6/build
      # Build your program with the given configuration
      run: cmake ..
      
    - uses: akhtyamovpavel/ActionGtestReport@v0.0.9
      with:
        exec-path: bin/CTestExe
        report-path: report.xml
        working-directory: ${{github.workspace}}/task6/     
    - name: Test
      run: cd task6 && tar -zcf test-report.tar.gz report.xml
      	
    - name: UploadArtifacts
      uses: actions/upload-artifact@v1
      with:
        name: Distributive
        path: task6/result/exe/
      	
          
          
          
